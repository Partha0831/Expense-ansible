- name: Set up backend
  hosts: backend
  become: yes
  vars:
    mysql_root_password: ExpenseApp@1
    login_host: mysql.devopspractice.in
  tasks:
    - name: disable node js
      ansible.builtin.command: "dnf module disable nodejs -y"
    - name: enable node js
      ansible.builtin.command: "dnf module enable nodejs:20 -y"
    - name: install node js 20
      ansible.builtin.package:
        name: "{{ item }}"
        state: present
      loop:
      - nodejs
      - mysql 
    - name: create user expense
      ansible.builtin.user:
        name: expense  
    - name: create a folder
      ansible.builtin.file:
        path: /app
        state: directory
    - name: ansible download code
      ansible.builtin.get_url:
        url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
        dest: /tmp/backend.zip
    - name: unzip code
      ansible.builtin.unarchive:
        src: /tmp/backend.zip
        dest: /app
        remote_src: yes
    - name: install npm
      ansible.builtin.command: npm install
      args:
        chdir: /app
    - name: copy a file
      ansible.builtin.copy:
        src: backend.service
        dest: /etc/systemd/system/backend.service
    - name: install mysql dependencies
      ansible.builtin.pip:
        name:
        - PyMySQL
        - cryptography
        executable: pip3.9
    - name: import mysql database
      community.mysql.mysql_db:
        login_user: root
        login_password: "{{ mysql_root_password }}" 
        login_host: "{{ login_host }}"
        target: /app/schema/backend.sql
        name: all
        state: import
    - name: system reload
      ansible.builtin.systemd_service:
        daemon_reload: true
        state: started
        name: backend









